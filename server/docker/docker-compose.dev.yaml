name: mem0-dev

services:
  mem0:
    build:
      context: ../..  # Set context to parent directory
      dockerfile: server/docker/dev.Dockerfile
    ports:
      - "8888:8000"
    env_file:
      - ../.env
    networks:
      - mem0_network
    volumes:
      - ../history:/app/history      # History db location. By default, it creates a history.db file on the server folder
      - ..:/app                      # Server code. This allows to reload the app when the server code is updated
      - ../../mem0:/app/packages/mem0  # Mem0 library. This allows to reload the app when the library code is updated
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      milvus-standalone:
        condition: service_healthy
    # command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload  # Enable auto-reload
    command: bash -c "cd /app && chmod +x docker/start.dev.sh && ./docker/start.dev.sh"
    environment:
      - PYTHONDONTWRITEBYTECODE=1  # Prevents Python from writing .pyc files
      - PYTHONUNBUFFERED=1  # Ensures Python output is sent straight to terminal

  postgres:
      image: ankane/pgvector:v0.5.1
      restart: on-failure
      shm_size: "128mb" # Increase this if vacuuming fails with a "no space left on device" error
      networks:
        - mem0_network
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
      healthcheck:
        test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
        interval: 5s
        timeout: 5s
        retries: 5
      volumes:
        - postgres_db:/var/lib/postgresql/data
      ports:
        - "8432:5432"
  neo4j:
    image: neo4j:5.26.4
    networks:
      - mem0_network
    healthcheck:
      test: wget http://localhost:7687 || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 90s
    ports:
      - "8474:7474" # HTTP
      - "8687:7687" # Bolt
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/mem0graph
      - NEO4J_PLUGINS=["apoc"]  # Add this line to install APOC
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true

  # Milvus vector database services
  etcd:
    image: quay.io/coreos/etcd:v3.5.18
    container_name: mem0-etcd
    networks:
      - mem0_network
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd_data:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "22379:2379"

  minio:
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    container_name: mem0-minio
    networks:
      - mem0_network
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    command: ["minio", "server", "/minio_data", "--console-address", ":9001"]
    volumes:
      - minio_data:/minio_data
    ports:
      - "29000:9000"
      - "29001:9001"

  milvus-standalone:
    image: milvusdb/milvus:v2.6.0
    container_name: mem0-milvus
    networks:
      - mem0_network
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MQ_TYPE: woodpecker
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "29530:19530"  # gRPC
      - "29091:9091"   # HTTP/metrics/healthz
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    depends_on:
      - etcd
      - minio

  attu:
    image: zilliz/attu:latest
    container_name: mem0-attu
    networks:
      - mem0_network
    environment:
      - MILVUS_URL=mem0-milvus:19530
    ports:
      - "28090:3000"
    depends_on:
      - milvus-standalone

volumes:
  neo4j_data:
  postgres_db:
  etcd_data:
  minio_data:
  milvus_data:

networks:
  mem0_network:
    driver: bridge